version: "3.3"
services:
  certs:
    build:
      context: Certs
    image: "${CERTS_IMAGE}"
    env_file:
      - platform.env
    volumes:
      - ~/.dragon/ssl:/etc/letsencrypt

  site:
    build:
      context: Site
    image: "${SITE_IMAGE}"
    env_file:
      - platform.env
    depends_on:
      - certs

  store:
    build:
      context: Store
    image: "${STORE_IMAGE}"
    env_file:
      - platform.env
    depends_on:
      - certs

  chain:
    build:
      context: Chain
    image: "${CHAIN_IMAGE}"
    command:
      --ws-interface all --ws-origins all --ws-hosts all --jsonrpc-hosts all --ui-interface 0.0.0.0 --ui-hosts all --ui-no-validation
    ports:
      - "8080:8080"
      - "8180:8180"
      - "8545:8545"
      - "8546:8546"
    env_file:
      - platform.env
    volumes:
      - /tmp/parity/:/root/.local/share/io.parity.ethereum/

  geth:
    build:
      context: Chain-geth
    image: "${GETH_IMAGE}"
    command:
      --fast --cache=512 --ws --wsaddr 0.0.0.0 --wsport 8546 --wsorigins '*' --wsapi 'eth,net,web3,shh' --shh
    ports:
      - "8080:8080"
      - "8180:8180"
      - "8545:8545"
      - "8546:8546"
    env_file:
      - platform.env
    volumes:
      - /tmp/geth/:/root

  api:
    build:
      context: API
    image: "${API_IMAGE}"
    env_file:
      - platform.env
    depends_on:
      - certs
      - store
      - chain
    links:
      - store
      - chain

  proxy:
    build:
      context: Proxy
    image: "${PROXY_IMAGE}"
    env_file:
      - platform.env
    volumes:
      - ~/.dragon/ssl/nginx-certs:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certs
      - site
      - api
    links:
      - certs
      - site
      - api

  health:
    build:
      context: Health
    image: "${HEALTH_IMAGE}"
    env_file:
      - platform.env
    depends_on:
      - chain
      - site
      - api
    links:
      - chain
      - site
      - api

